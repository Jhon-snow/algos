import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.BigInteger; 
class GFG
 {
     
      static BigInteger factorial(int N) 
    { 
        // Initialize result 
        BigInteger f = new BigInteger("1"); // Or BigInteger.ONE 
  
        // Multiply f with 2, 3, ...N 
        for (int i = 2; i <= N; i++) 
            f = f.multiply(BigInteger.valueOf(i)); 
  
        return f; 
    } 
	public static void main (String[] args)
	 {
	 //code
	 Scanner scan=new Scanner(System.in);
	 int t=scan.nextInt();
	 while(t-->0){
	     int n=scan.nextInt();
	   BigInteger  f= factorial(n);
	   // System.out.println(f);
	    
	     
	     BigInteger fd;
	   
	   int length = String.valueOf(f).length();
	   //  while(k!=0){
	   //    k=k/10;
	   //      c++;
	   //  }
	   BigInteger bi1;
	    bi1 = new BigInteger("10");
	   int exponent = length-1;
	   BigInteger  d=bi1.pow(exponent);
	 //   System.out.println(d);
	     fd=f.divide(d);
	    // c=c-1;
	    length-=1;
	      System.out.println(fd+" "+length);
	 }
	
	 }
}
