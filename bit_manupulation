package com.company;
import java.util.*;
public class bitmanupulation {
    public int calc_xor(int n){
        if(n%4==1)                    //claculate xor of all the numbers to n
            return 1;
        else if(n%4==2)
            return n+1;
        else if(n%4==3)
            return 0;
        else return n;
    }
    public int cal_count(int n){
        //calculate all the i,0<i<=n, where n^i=n+i
        //n+i=n^i+n&i
        //therefore for n+i=n^i ,n&i==0
        int count=0;
        while(n>0){
                if((n&1)==0)
                    count++;
               n= n>>1;

        }
        //to calculate 2^power(count) left shift operation is perfrmed
        return 1<<count;

    }
    public void check_num(int x){
        if(x==0)//to check if given no is in power of 2
            System.out.print("yes");
        else if((x&x-1)==0)
        System.out.print("yes");
        else
        System.out.println("no");

    }
    public int  no_of_1_bits(int x){
        int count=0;
        while(x>0){     //no of 1 bits in the number
            x=x&x-1;
            count++;
        }
        return count;
    }


    public void subsets(int arr[]){
        int n=arr.length;
        for(int i=0;i<(1<<n);i++){
            for(int j=0;j<n;j++){
                if((i&(1<<j))>0)//1<<j=2^j=(0,1,4)so each time it will comapre each digit from j with single value of i
                    System.out.print(arr[j]+"");
                System.out.println();
            }
        }
    }




    public boolean check_ith_bit(int x,int i){
        if((x&1<<i)==0)         //check if the ith bit of the number is set or not (1<<i=2^i*1)
            return true;
        else return false;
    }
    public static void main(String []args){
        bitmanupulation b=new bitmanupulation();
//        Scanner scan=new Scanner(System.in);
//        int n=scan.nextInt();
//        System.out.println(b.calc_xor(n));
//        System.out.println(b.cal_count(n));
//        b.check_num(n);
        int arr[]=new int[]{0,5,9};
        b.subsets(arr);
    }
}
